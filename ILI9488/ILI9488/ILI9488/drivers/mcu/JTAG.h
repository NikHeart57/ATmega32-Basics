/**
 * @note		Комментарий сгенерирован нейросетью deepseek 18.08.25
 *
 * @file        JTAG.h
 * @brief       Минимальная реализация управления JTAG для AVR микроконтроллера AtMega32
 * @details     Предоставляет только базовые функции включения/отключения JTAG интерфейса.
 *              Реализация не поддерживает полноценную работу с JTAG (сканирование цепи, отладку и т.д.).
 * 
 * @note        Особенности:
 *              - Только управление состоянием (вкл/выкл)
 *              - Требуется двойная запись в регистр MCUCSR (согласно документации AVR)
 * 
 * @warning     Ограничения:
 *              - Нет поддержки Boundary Scan (JTAG)
 *              - Нет контроля за состоянием TAP-контроллера
 *              - Минимальная проверка ошибок
 * 
 * @attention   Для работы необходимо:
 *              - Подключение <avr/io.h>
 *              - Корректная настройка FUSE-битов микроконтроллера (JTAGEN - 0)
 * 
 * @todo        Планируемые улучшения:
 *              - Добавление базовой диагностики цепи
 *              - Поддержка чтения IDCODE
 *              - Реализация простого TAP-контроллера
 * 
 * @bug         Известные проблемы:
 *              - Неизвестно. Полноценно не тестировалось. Использовалось только для отключения JTAG при запуске МК
 * 
 * @author      Николай Куркин, deepseek
 * @date        2025-08-18
 * @version     0.0
 * 
 * @copyright   MIT License
 */

#pragma once
#include <avr/io.h>

//////////////////////////////////////////////////////////////////////////
//	НАСТРОЙКИ JTAG (ПЕРЕЧИСЛЕНИЯ И КОНСТАНТЫ)
//////////////////////////////////////////////////////////////////////////

/**
 * @brief Режимы работы JTAG
 * @note Текущая реализация поддерживает только базовые состояния включения/отключения
 */
typedef enum {
    JTAG_DISABLED = 0,			// Отключение JTAG (освобождает соответствующие пины)
    JTAG_ENABLED,				// Включение JTAG (состояние по умолчанию после сброса)
} JTAG_State;


//////////////////////////////////////////////////////////////////////////
//	Прототипы функций JTAG
//////////////////////////////////////////////////////////////////////////

/**
 * @brief Управление состоянием JTAG (включение/отключение)
 * @param state Требуемое состояние JTAG (только JTAG_DISABLED или JTAG_ENABLED)
 * @note Функция выполняет двойную запись в регистр MCUCSR как требуется спецификацией
 * @warning Текущая реализация не поддерживает полноценную работу с JTAG, только управление состоянием
 * @return 1 в случае успеха, 0 при ошибке
 */
uint8_t JTAG_Init(JTAG_State state);

/**
 * @brief Проверка текущего состояния JTAG
 * @note Функция только проверяет состояние, но не предоставляет других возможностей диагностики JTAG
 * @return 1 если JTAG включен, 0 если отключен
 */
uint8_t JTAG_IsWorking(void);
